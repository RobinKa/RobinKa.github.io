{"version":3,"sources":["Painter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["tf","activations","inputImageWidth","inputImageHeight","inputImageTime","inputImageRadius","inputImage","getInputImage","width","height","time","radius","image","halfWidth","halfHeight","x","push","y","Math","cos","PI","sin","Painter","props","_ref","setProgress","setGenerating","layers","numHidden","numFrames","canvas","useRef","generateImage","_x","_x2","_generateImage","apply","this","arguments","Object","asyncToGenerator","regenerator_default","a","mark","_callee","model","pred","predColors","wrap","_context","prev","next","predict","array","sent","abrupt","stop","generateModel","_generateModel","_callee2","images","canv","ctx","imageData","getRandomActivation","inputShape","hiddenShape","i","frame","_i","_context2","floor","random","length","current","getContext","createImageData","add","conv2d","kernelSize","filters","activation","batchNormalization","data","putImageData","toDataURL","gifshot","obj","error","animatedImage","document","createElement","src","body","appendChild","react_default","ref","onClick","style","boxShadow","marginTop","textAlign","Button","App","_useState","useState","_useState2","slicedToArray","setWidth","_useState3","_useState4","setHeight","_useState5","_useState6","progress","_useState7","_useState8","generating","_useState9","_useState10","setLayers","_useState11","_useState12","setNumHidden","_useState13","_useState14","frames","setFrames","_useState15","_useState16","setRadius","marginLeft","marginRight","href","fontSize","visibility","ProgressBar","animated","min","max","now","label","concat","round","es","defaultValue","step","onChange","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.efddbb9c.chunk.js","sourcesContent":["import * as tf from \"@tensorflow/tfjs\"\r\nimport React, { useRef } from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nimport * as gifshot from \"gifshot\"\r\n\r\ntf.enableProdMode()\r\n\r\nconst activations: any = [\r\n    \"elu\",\r\n    \"hardSigmoid\",\r\n    \"linear\",\r\n    \"relu\",\r\n    \"relu6\",\r\n    \"selu\",\r\n    \"sigmoid\",\r\n    \"softmax\",\r\n    \"softplus\",\r\n    \"softsign\",\r\n    \"tanh\",\r\n]\r\n\r\nlet inputImageWidth: number = 0\r\nlet inputImageHeight: number = 0\r\nlet inputImageTime: number = 0\r\nlet inputImageRadius: number = 0\r\nlet inputImage: any = null\r\n\r\nfunction getInputImage(width: number, height: number, time: number, radius: number) {\r\n    if (inputImageWidth === width && inputImageHeight === height && inputImageTime === time && inputImageRadius === radius) {\r\n        return inputImage\r\n    }\r\n\r\n    const image: number[][][] = []\r\n    const halfWidth = width / 2\r\n    const halfHeight = height / 2\r\n    for (let x = 0; x < width; x++) {\r\n        image.push([])\r\n        for (let y = 0; y < height; y++) {\r\n            image[x].push([x - halfWidth, y - halfHeight, radius * Math.cos(2 * Math.PI * time), radius * Math.sin(2 * Math.PI * time)])\r\n        }\r\n    }\r\n\r\n    inputImage = tf.tensor4d([image])\r\n\r\n    inputImageWidth = width\r\n    inputImageHeight = height\r\n    inputImageTime = time\r\n    inputImageRadius = radius\r\n\r\n    return inputImage\r\n}\r\n\r\nexport function Painter(props: any) {\r\n    const [width, height] = [props.width, props.height]\r\n    const setProgress = props.setProgress\r\n    const setGenerating = props.setGenerating\r\n    const layers = props.layers\r\n    const numHidden = props.numHidden\r\n    const numFrames = props.numFrames\r\n    const radius = props.radius\r\n\r\n    const canvas = useRef<HTMLCanvasElement>(null)\r\n\r\n    async function generateImage(model: tf.Sequential, time: number) {\r\n        const pred = model.predict(getInputImage(width, height, time, radius)) as tf.Tensor\r\n\r\n        const predColors = await pred.array() as number[][][][]\r\n\r\n        return predColors[0]\r\n    }\r\n\r\n    async function generateModel() {\r\n        setProgress(0)\r\n\r\n        const images = []\r\n\r\n        const canv = canvas.current!\r\n        const ctx = canv.getContext(\"2d\")!\r\n        const imageData = ctx.createImageData(width, height)\r\n        let time = 0\r\n\r\n        function getRandomActivation(): any {\r\n            return activations[Math.floor(Math.random() * activations.length)]\r\n        }\r\n\r\n        setGenerating(true)\r\n\r\n        const model = tf.sequential()\r\n        const inputShape = [width, height, 4]\r\n        const hiddenShape = [width, height, numHidden]\r\n\r\n        for (let i = 0; i < layers - 1; i++) {\r\n            model.add(tf.layers.conv2d({\r\n                kernelSize: [1, 1],\r\n                filters: numHidden,\r\n                inputShape: i === 0 ? inputShape : hiddenShape,\r\n            }))\r\n\r\n            model.add(tf.layers.activation({\r\n                activation: getRandomActivation(),\r\n            }))\r\n\r\n            model.add(tf.layers.batchNormalization())\r\n        }\r\n\r\n        model.add(tf.layers.conv2d({ inputShape: layers === 1 ? inputShape : hiddenShape, filters: 3, kernelSize: [1, 1] }))\r\n        model.add(tf.layers.activation({\r\n            activation: getRandomActivation(),\r\n        }))\r\n\r\n        for (let frame = 0; frame < numFrames; frame++) {\r\n            const image = await generateImage(model, time)\r\n\r\n            for (let x = 0; x < width; x++) {\r\n                for (let y = 0; y < height; y++) {\r\n                    const i = x + y * width\r\n                    imageData.data[i * 4 + 0] = Math.floor(255 * image[x][y][0])\r\n                    imageData.data[i * 4 + 1] = Math.floor(255 * image[x][y][1])\r\n                    imageData.data[i * 4 + 2] = Math.floor(255 * image[x][y][2])\r\n                    imageData.data[i * 4 + 3] = 255\r\n                }\r\n            }\r\n\r\n            ctx.putImageData(imageData, 0, 0)\r\n\r\n            images.push(canv.toDataURL(\"image/jpeg\", 0.9))\r\n\r\n            time += 1 / numFrames\r\n\r\n            setProgress(frame / numFrames)\r\n        }\r\n\r\n        gifshot.createGIF({\r\n            \"images\": images\r\n        }, function (obj: any) {\r\n            if (!obj.error) {\r\n                const image = obj.image\r\n                const animatedImage = document.createElement(\"img\")\r\n                animatedImage.src = image\r\n                document.body.appendChild(animatedImage);\r\n            }\r\n        })\r\n\r\n        setProgress(1)\r\n        setGenerating(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <canvas ref={canvas} onClick={generateModel} width={width} height={height} style={{ boxShadow: \"3px 3px 5px 0px rgba(0,0,0,0.75)\" }} />\r\n\r\n            <div style={{ marginTop: \"10px\", textAlign: \"center\" }}>\r\n                <Button onClick={generateModel}>Generate</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport './App.css'\nimport { Painter } from './Painter'\nimport { ProgressBar } from 'react-bootstrap'\nimport Slider from 'rc-slider'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'rc-slider/assets/index.css'\n\nconst [defaultWidth, defaultHeight] = [256, 256]\nconst defaultLayers = 3\nconst defaultNumHidden = 10\nconst defaultFrames = 20\nconst defaultRadius = 10\n\nconst App: React.FC = () => {\n    const [width, setWidth] = useState(defaultWidth)\n    const [height, setHeight] = useState(defaultHeight)\n    const [progress, setProgress] = useState(0)\n    const [generating, setGenerating] = useState(false)\n    const [layers, setLayers] = useState(defaultLayers)\n    const [numHidden, setNumHidden] = useState(defaultNumHidden)\n    const [frames, setFrames] = useState(defaultFrames)\n    const [radius, setRadius] = useState(defaultRadius)\n\n    return (\n        <div>\n            <div style={{ marginLeft: \"20%\", marginRight: \"20%\" }}>\n                <h1 style={{ textAlign: \"center\" }}>Neural Painter</h1>\n                <a href=\"https://github.com/RobinKa/web-neural-painter\"><h3 style={{ textAlign: \"center\" }}>Source Code</h3></a>\n\n                <label style={{ fontSize: \"24px\", visibility: !generating ? \"collapse\" : \"visible\" }}>Generating...</label>\n                <ProgressBar animated min={0} max={1} now={progress} label={`${Math.round(progress * 100)}%`} style={{ visibility: !generating ? \"collapse\" : \"visible\" }} />\n                <div style={{ textAlign: \"center\" }}>\n                    <Slider defaultValue={defaultWidth} min={0} max={1024} step={16} onChange={value => setWidth(value)} />\n                    <label>Width: {width}</label>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <Slider defaultValue={defaultHeight} min={0} max={1024} step={16} onChange={value => setHeight(value)} />\n                    <label>Height: {height}</label>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <Slider defaultValue={defaultLayers} min={1} max={50} step={1} onChange={value => setLayers(value)} />\n                    <label>Layers: {layers}</label>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <Slider defaultValue={defaultNumHidden} min={1} max={100} step={1} onChange={value => setNumHidden(value)} />\n                    <label>Hidden: {numHidden}</label>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <Slider defaultValue={defaultFrames} min={1} max={120} step={1} onChange={value => setFrames(value)} />\n                    <label>Frames: {frames}</label>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <Slider defaultValue={defaultRadius} min={0.01} max={100} step={0.01} onChange={value => setRadius(value)} />\n                    <label>Radius: {radius}</label>\n                </div>\n            </div>\n\n            <div style={{ visibility: generating ? \"hidden\" : \"visible\", textAlign: \"center\" }}>\n                <Painter width={width} height={height} setProgress={setProgress} setGenerating={setGenerating} layers={layers} numHidden={numHidden} numFrames={frames} radius={radius} />\n            </div>\n        </div>\n    );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}