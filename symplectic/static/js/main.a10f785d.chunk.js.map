{"version":3,"sources":["Symplectic.ts","Context.ts","EnergyTermList.tsx","ObjectList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["vectorMulAddInline","a","b","f","i","length","vectorMulAdd","result","SymplecticIntegrator","constants","getEnergyGradients","iterate","state","dt","newState","cloneDeep","time","auxPosition","auxMomentum","objectId","objects","object","c","d","auxPos","auxMom","position","momentum","grads","gradMomentum","gradPosition","push","slice","appReducer","action","type","energyTerms","term","index","pop","Error","AppContext","createContext","undefined","AffectedObjectList","props","useContext","dispatch","energyTerm","map","objectIndex","isAffected","affectedObjects","key","checked","onChange","AffectedObjectPairList","otherObject","otherObjectIndex","pairIndex","toString","affectedObjectPairs","EnergyTerm","useState","formula","setFormula","parsed","setParsed","parseFormula","useCallback","energyExpression","parseExpression","expression","onFormulaChanged","e","target","value","style","border","padding","margin","width","color","onClick","EnergyTermList","expr","Constant","ObjectList","IntegratorStateCanvas","canvasRef","useRef","useEffect","current","canvas","ctx","getContext","fillStyle","fillRect","height","integratorState","x","y","ref","integratorConstants","makeSingleContext","dimensions","context","variableValues","dim","IntegratorComponent","setIntegratorState","integrator","setIntegrator","calcNextState","interval","setInterval","clearInterval","simulate","gradsPosition","gradsMomentum","termVariables","getAllVariables","energyTermGradsPosition","energyTermGradsMomentum","getDerivativeForExpression","getAllDerivatives","initialIntegratorState","forEach","Math","random","evaluationContext","energyTermIndex","evaluate","_","pairContext","otherPosition","otherMomentum","makePairContext","App","initialState","useReducer","useAppReducer","Provider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a10f785d.chunk.js","sourcesContent":["import cloneDeep from \"clone-deep\"\r\n\r\n\r\nexport type ObjectState = {\r\n    position: number[]\r\n    momentum: number[]\r\n}\r\n\r\nexport type EnergyGradientFunction = (objectIndex: number, position: number[], momentum: number[], integratorState: IntegratorState) => {\r\n    gradPosition: number[],\r\n    gradMomentum: number[]\r\n}\r\n\r\nexport type IntegratorState = {\r\n    time: number\r\n    objects: ObjectState[]\r\n}\r\n\r\nexport interface Integrator {\r\n    iterate: (state: IntegratorState, dt: number) => IntegratorState\r\n}\r\n\r\nexport type SymplecticIntegratorConstants = { c: number, d: number }[]\r\n\r\nfunction vectorMulAddInline(a: number[], b: number[], f: number) {\r\n    for (let i = 0; i < a.length; i++) {\r\n        a[i] += f * b[i]\r\n    }\r\n}\r\n\r\nfunction vectorMulAdd(result: number[], a: number[], b: number[], f: number) {\r\n    for (let i = 0; i < a.length; i++) {\r\n        result[i] = a[i] + f * b[i]\r\n    }\r\n}\r\n\r\nexport class SymplecticIntegrator implements Integrator {\r\n    constructor(readonly constants: SymplecticIntegratorConstants,\r\n        readonly getEnergyGradients: EnergyGradientFunction) {\r\n    }\r\n\r\n    public iterate = (state: IntegratorState, dt: number) => {\r\n        const newState = cloneDeep(state)\r\n        newState.time += 2 * dt\r\n\r\n        const auxPosition: number[][] = []\r\n        const auxMomentum: number[][] = []\r\n\r\n        // 1. Iter\r\n\r\n        for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n            const object = newState.objects[objectId]\r\n\r\n            const { c, d } = this.constants[0]\r\n\r\n            // Initialize aux position and momentum\r\n            const auxPos: number[] = []\r\n            const auxMom: number[] = []\r\n            auxPos.length = object.position.length\r\n            auxMom.length = object.momentum.length\r\n\r\n            // Calculate gradients at real coords\r\n            let grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n            vectorMulAdd(auxPos, object.position, grads.gradMomentum, dt * d)\r\n            vectorMulAdd(auxMom, object.momentum, grads.gradPosition, dt * -d)\r\n\r\n            // Calculate gradients at aux coords\r\n            grads = this.getEnergyGradients(objectId, auxPos, auxMom, state)\r\n            vectorMulAddInline(object.position, grads.gradMomentum, dt * c)\r\n            vectorMulAddInline(object.momentum, grads.gradPosition, dt * -c)\r\n\r\n            auxPosition.push(auxPos)\r\n            auxMomentum.push(auxMom)\r\n        }\r\n\r\n        for (const { c, d } of this.constants.slice(1, this.constants.length - 1)) {\r\n            for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n                const object = newState.objects[objectId]\r\n                const auxPos = auxPosition[objectId]\r\n                const auxMom = auxMomentum[objectId]\r\n\r\n                // Calculate gradients at real coords\r\n                let grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n                vectorMulAddInline(auxPos, grads.gradMomentum, dt * d)\r\n                vectorMulAddInline(auxMom, grads.gradPosition, dt * -d)\r\n\r\n                // Calculate gradients at aux coords\r\n                grads = this.getEnergyGradients(objectId, auxPos, auxMom, state)\r\n                vectorMulAddInline(object.position, grads.gradMomentum, dt * c)\r\n                vectorMulAddInline(object.momentum, grads.gradPosition, dt * -c)\r\n            }\r\n        }\r\n\r\n        for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n            const d = this.constants[this.constants.length - 1].d\r\n\r\n            const object = newState.objects[objectId]\r\n            const auxPos = auxPosition[objectId]\r\n\r\n            // Calculate gradients at real coords\r\n            const grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n            vectorMulAdd(object.position, auxPos, grads.gradMomentum, dt * d)\r\n        }\r\n\r\n        // 2. Iter\r\n        for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n            const object = newState.objects[objectId]\r\n\r\n            const { c, d } = this.constants[0]\r\n\r\n            // Initialize aux position and momentum\r\n            const auxPos = auxPosition[objectId]\r\n            const auxMom = auxMomentum[objectId]\r\n\r\n            // Calculate gradients at real coords\r\n            let grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n            vectorMulAdd(auxPos, object.position, grads.gradMomentum, dt * d)\r\n            vectorMulAdd(auxMom, object.momentum, grads.gradPosition, dt * -d)\r\n\r\n            // Calculate gradients at aux coords\r\n            grads = this.getEnergyGradients(objectId, auxPos, auxMom, state)\r\n            vectorMulAddInline(object.position, grads.gradMomentum, dt * c)\r\n            vectorMulAddInline(object.momentum, grads.gradPosition, dt * -c)\r\n        }\r\n\r\n        for (const { c, d } of this.constants.slice(1, this.constants.length - 1)) {\r\n            for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n                const object = newState.objects[objectId]\r\n                const auxPos = auxPosition[objectId]\r\n                const auxMom = auxMomentum[objectId]\r\n\r\n                // Calculate gradients at real coords\r\n                let grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n                vectorMulAddInline(auxPos, grads.gradMomentum, dt * d)\r\n                vectorMulAddInline(auxMom, grads.gradPosition, dt * -d)\r\n\r\n                // Calculate gradients at aux coords\r\n                grads = this.getEnergyGradients(objectId, auxPos, auxMom, state)\r\n                vectorMulAddInline(object.position, grads.gradMomentum, dt * c)\r\n                vectorMulAddInline(object.momentum, grads.gradPosition, dt * -c)\r\n            }\r\n        }\r\n\r\n        for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n            const d = this.constants[this.constants.length - 1].d\r\n\r\n            const object = newState.objects[objectId]\r\n            const auxMom = auxMomentum[objectId]\r\n\r\n            // Calculate gradients at real coords\r\n            const grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n            vectorMulAdd(object.momentum, auxMom, grads.gradPosition, dt * -d)\r\n        }\r\n\r\n        return newState\r\n    }\r\n}","import { Dispatch, createContext, useReducer } from \"react\"\r\nimport { Expression, parseExpression } from \"tadiff\"\r\n\r\nexport type AppEnergyTerm = {\r\n    expression: Expression\r\n    affectedObjects: { [objectIndex: number]: boolean }\r\n    affectedObjectPairs: { [objectIndices: string]: boolean }\r\n}\r\n\r\nexport type AppState = {\r\n    energyTerms: AppEnergyTerm[]\r\n    objects: {}[]\r\n    dimensions: number\r\n}\r\n\r\nexport type AppActionAddEnergyTerm = {\r\n    type: \"addEnergyTerm\"\r\n    term: AppEnergyTerm\r\n}\r\n\r\nexport type AppActionUpdateEnergyTerm = {\r\n    type: \"updateEnergyTerm\"\r\n    index: number\r\n    term: AppEnergyTerm\r\n}\r\n\r\nexport type AppActionRemoveEnergyTerm = {\r\n    type: \"removeEnergyTerm\"\r\n}\r\n\r\nexport type AppActionAddObject = {\r\n    type: \"addObject\"\r\n}\r\n\r\nexport type AppActionRemoveObject = {\r\n    type: \"removeObject\"\r\n}\r\n\r\nexport type AppAction = AppActionAddEnergyTerm | AppActionUpdateEnergyTerm |\r\n    AppActionRemoveEnergyTerm | AppActionAddObject | AppActionRemoveObject\r\n\r\nfunction appReducer(state: AppState, action: AppAction) {\r\n    switch (action.type) {\r\n        case \"addEnergyTerm\": {\r\n            return { ...state, energyTerms: [...state.energyTerms, action.term] }\r\n        } case \"updateEnergyTerm\": {\r\n            const energyTerms = [...state.energyTerms]\r\n            energyTerms[action.index] = action.term\r\n            return { ...state, energyTerms: energyTerms }\r\n        } case \"removeEnergyTerm\": {\r\n            const energyTerms = [...state.energyTerms]\r\n            energyTerms.pop()\r\n            return { ...state, energyTerms: energyTerms }\r\n        } case \"addObject\": {\r\n            const newObject = {}\r\n            return { ...state, objects: [...state.objects, newObject] }\r\n        } case \"removeObject\": {\r\n            const objects = [...state.objects]\r\n            objects.pop()\r\n            return { ...state, objects: objects }\r\n        }\r\n    }\r\n\r\n    throw new Error(\"Unhandled action in reducer\")\r\n}\r\n\r\nexport function useAppReducer() {\r\n    const initialState: AppState = {\r\n        energyTerms: [{\r\n            expression: parseExpression(\"0.5 * (p0 * p0 + p1 * p1)\"),\r\n            affectedObjects: {},\r\n            affectedObjectPairs: {}\r\n        }, {\r\n            expression: parseExpression(\"-10000 / ((q0 - q0_b)^2 + (q1 - q1_b)^2)\"),\r\n            affectedObjects: {},\r\n            affectedObjectPairs: {}\r\n        }],\r\n        objects: [],\r\n        dimensions: 2\r\n    }\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n        initialState.objects.push({})\r\n    }\r\n\r\n    initialState.objects.forEach((_, objectIndex) => {\r\n        initialState.energyTerms[0].affectedObjects[objectIndex] = true\r\n    })\r\n\r\n    initialState.objects.forEach((_, objectIndex) => {\r\n        initialState.objects.forEach((_, otherObjectIndex) => {\r\n            if (objectIndex !== otherObjectIndex) {\r\n                initialState.energyTerms[1].affectedObjectPairs[[objectIndex, otherObjectIndex].toString()] = true\r\n            }\r\n        })\r\n    })\r\n\r\n    return useReducer(appReducer, initialState)\r\n}\r\n\r\nexport const AppContext = createContext<{ state: AppState, dispatch: Dispatch<AppAction> } | undefined>(undefined)","import React, { useState, useCallback, useContext } from \"react\"\r\nimport { parseExpression, Expression, Constant } from \"tadiff\"\r\nimport { AppContext, AppEnergyTerm } from \"./Context\"\r\n\r\ntype EnergyTermProps = {\r\n    index: number\r\n}\r\n\r\nfunction makeEnergyTerm(expr: Expression): AppEnergyTerm {\r\n    return {\r\n        expression: expr,\r\n        affectedObjects: {},\r\n        affectedObjectPairs: {}\r\n    }\r\n}\r\n\r\nfunction AffectedObjectList(props: EnergyTermProps) {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    const index = props.index\r\n\r\n    const energyTerm = state.energyTerms[index]\r\n\r\n    return (\r\n        <div>\r\n            {state.objects.map((object, objectIndex) => {\r\n                const isAffected = !!energyTerm.affectedObjects[objectIndex]\r\n\r\n                const onChange = () => dispatch({\r\n                    type: \"updateEnergyTerm\",\r\n                    index: index,\r\n                    term: {\r\n                        ...energyTerm,\r\n                        affectedObjects: {\r\n                            ...energyTerm.affectedObjects,\r\n                            [objectIndex]: !isAffected\r\n                        }\r\n                    }\r\n                })\r\n\r\n                return <input type=\"checkbox\" key={objectIndex} checked={isAffected} onChange={onChange} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AffectedObjectPairList(props: EnergyTermProps) {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    const index = props.index\r\n\r\n    const energyTerm = state.energyTerms[index]\r\n\r\n    return (\r\n        <div>\r\n            {state.objects.map((object, objectIndex) =>\r\n                <div>\r\n                    {state.objects.map((otherObject, otherObjectIndex) => {\r\n                        const pairIndex = [objectIndex, otherObjectIndex].toString()\r\n                        const isAffected = !!energyTerm.affectedObjectPairs[pairIndex]\r\n\r\n                        const onChange = () => dispatch({\r\n                            type: \"updateEnergyTerm\",\r\n                            index: index,\r\n                            term: {\r\n                                ...energyTerm,\r\n                                affectedObjectPairs: {\r\n                                    ...energyTerm.affectedObjectPairs,\r\n                                    [pairIndex]: !isAffected\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                        return <input type=\"checkbox\" key={objectIndex} checked={isAffected} onChange={onChange} />\r\n                    })}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction EnergyTerm(props: EnergyTermProps) {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    const [formula, setFormula] = useState(\"\")\r\n    const [parsed, setParsed] = useState(true)\r\n    const index = props.index\r\n\r\n    const energyTerm = state.energyTerms[index]\r\n\r\n    const parseFormula = useCallback(() => {\r\n        const energyExpression = parseExpression(formula)\r\n        setParsed(true)\r\n        dispatch({ type: \"updateEnergyTerm\", index: index, term: { ...energyTerm, expression: energyExpression } })\r\n    }, [formula, index, dispatch, energyTerm])\r\n\r\n    const onFormulaChanged = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormula(e.target.value)\r\n        setParsed(false)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ border: \"2px solid black\", padding: \"4px\", margin: \"4px\" }}>\r\n            <h2>Energy {index}</h2>\r\n            <input type=\"text\" style={{ width: 800, color: parsed ? \"black\" : \"red\" }} onChange={onFormulaChanged} value={formula} />\r\n            <input type=\"button\" value=\"Parse\" onClick={parseFormula} />\r\n\r\n            <h3>Affected objects</h3>\r\n            <AffectedObjectList index={index} />\r\n\r\n            <h3>Affected object pairs</h3>\r\n            <AffectedObjectPairList index={index} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function EnergyTermList() {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    const energyTerms = state.energyTerms\r\n\r\n    return (\r\n        <div style={{}}>\r\n            <h1>Energy terms</h1>\r\n            <div>\r\n                {energyTerms.map((term, index) => <EnergyTerm key={index} index={index} />)}\r\n            </div>\r\n            <input type=\"button\" value=\"Add\" onClick={() => dispatch({ type: \"addEnergyTerm\", term: makeEnergyTerm(new Constant(0)) })} />\r\n            <input type=\"button\" value=\"Remove\" onClick={() => dispatch({ type: \"removeEnergyTerm\" })} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { AppContext } from \"./Context\"\r\n\r\nexport function ObjectList() {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    return (\r\n        <div>\r\n            <h1>Objects</h1>\r\n            <div>\r\n                {state.objects.map((object, index) => {\r\n                    return (\r\n                        <div style={{ border: \"2px solid black\", padding: \"4px\", margin: \"4px\" }}>\r\n                            <h2>Object {index}</h2>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <input type=\"button\" value=\"Add\" onClick={() => dispatch({ type: \"addObject\" })} />\r\n            <input type=\"button\" value=\"Remove\" onClick={() => dispatch({ type: \"removeObject\" })} />\r\n        </div>\r\n    )\r\n}","import React, { useState, useCallback, useRef, useEffect, useContext } from 'react'\n\nimport { SymplecticIntegrator, IntegratorState } from \"./Symplectic\"\n\nimport { getAllDerivatives, getDerivativeForExpression, getAllVariables } from \"tadiff\"\nimport * as e from \"tadiff/expressions\"\n\nimport { AppContext, useAppReducer } from \"./Context\"\nimport EnergyTermList from './EnergyTermList'\nimport { ObjectList } from './ObjectList'\nimport { Tabs, TabPanel, TabList, Tab } from 'react-tabs'\nimport \"react-tabs/style/react-tabs.css\"\n\nconst IntegratorStateCanvas = (props: { integratorState: IntegratorState }) => {\n    const canvasRef = useRef<HTMLCanvasElement>(null)\n\n    useEffect(() => {\n        if (canvasRef.current) {\n            const canvas = canvasRef.current\n            const ctx = canvas.getContext(\"2d\")\n            if (ctx) {\n                ctx.fillStyle = \"grey\"\n                ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n                ctx.fillStyle = \"red\"\n                for (const object of props.integratorState.objects) {\n                    const [x, y] = [object.position[0] + canvas.width / 2, object.position[1] + canvas.height / 2]\n                    ctx.fillRect(x, y, 4, 4)\n                }\n            }\n        }\n    }, [props.integratorState, canvasRef])\n\n    return <canvas width=\"1000\" height=\"1000\" ref={canvasRef} />\n}\n\nconst integratorConstants = [\n    { c: 0.2465881872786138277570711850755, d: 0.0833333333333333333333333333333 },\n    { c: 0.6047073875057809013986983841500, d: 0.3977675859548440074217908138861 },\n    { c: -0.4009869039788007481085648931513, d: -0.0393336931446257363828544842332 },\n    { c: 0.0993826583888120379055906478517, d: 0.0582327738564483956277303370138 },\n    { c: -0.4009869039788007481085648931513, d: 0.0582327738564483956277303370138 },\n    { c: 0.6047073875057809013986983841500, d: -0.0393336931446257363828544842332 },\n    { c: 0.2465881872786138277570711850755, d: 0.3977675859548440074217908138861 },\n    { c: 0.0000000000000000000000000000000, d: 0.0833333333333333333333333333333 },\n]\n\nfunction makeSingleContext(position: number[], momentum: number[], dimensions: number): e.EvaluationContext {\n    const context: e.EvaluationContext = {\n        variableValues: {}\n    }\n\n    for (let dim = 0; dim < dimensions; dim++) {\n        context.variableValues[\"p\" + dim.toString()] = momentum[dim]\n        context.variableValues[\"q\" + dim.toString()] = position[dim]\n    }\n\n    return context\n}\n\nfunction makePairContext(position: number[], momentum: number[], otherPosition: number[], otherMomentum: number[], dimensions: number): e.EvaluationContext {\n    const context = makeSingleContext(position, momentum, dimensions)\n\n    for (let dim = 0; dim < dimensions; dim++) {\n        context.variableValues[\"p\" + dim.toString() + \"_b\"] = otherMomentum[dim]\n        context.variableValues[\"q\" + dim.toString() + \"_b\"] = otherPosition[dim]\n    }\n\n    return context\n}\n\nconst stepSize = 0.02\nconst speed = 1\n\nconst IntegratorComponent = () => {\n    const { state } = useContext(AppContext)!\n\n    const [integratorState, setIntegratorState] = useState<IntegratorState | null>(null)\n\n    const [integrator, setIntegrator] = useState<SymplecticIntegrator | null>(null)\n\n    const calcNextState = useCallback(() => {\n        if (integrator && integratorState) {\n            const newState = integrator.iterate(integratorState, stepSize)\n            setIntegratorState(newState)\n        }\n    }, [integratorState, setIntegratorState, integrator])\n\n    useEffect(() => {\n        const interval = setInterval(calcNextState, 1000 * stepSize / speed)\n        return () => clearInterval(interval)\n    }, [calcNextState])\n\n    const simulate = useCallback(() => {\n        const energyTerms = state.energyTerms\n\n        const gradsPosition: e.Expression[][] = []\n        const gradsMomentum: e.Expression[][] = []\n\n        for (const energyTerm of energyTerms) {\n            const termVariables = getAllVariables(energyTerm.expression)\n\n            const energyTermGradsPosition = []\n            const energyTermGradsMomentum = []\n\n            for (let dim = 0; dim < state.dimensions; dim++) {\n                const gradPosition = getDerivativeForExpression(termVariables[\"q\" + dim.toString()], getAllDerivatives(energyTerm.expression, new e.Constant(1)))\n                const gradMomentum = getDerivativeForExpression(termVariables[\"p\" + dim.toString()], getAllDerivatives(energyTerm.expression, new e.Constant(1)))\n\n                energyTermGradsPosition.push(gradPosition)\n                energyTermGradsMomentum.push(gradMomentum)\n            }\n\n            gradsPosition.push(energyTermGradsPosition)\n            gradsMomentum.push(energyTermGradsMomentum)\n        }\n\n        const getGradForObject = (objectIndex: number, position: number[], momentum: number[], integratorState: IntegratorState) => {\n            const evaluationContext = makeSingleContext(position, momentum, state.dimensions)\n\n            const gradPosition: number[] = []\n            const gradMomentum: number[] = []\n\n            for (let dim = 0; dim < state.dimensions; dim++) {\n                gradPosition.push(0)\n                gradMomentum.push(0)\n            }\n\n            state.energyTerms.forEach((energyTerm, energyTermIndex) => {\n                if (energyTerm.affectedObjects[objectIndex]) {\n                    for (let dim = 0; dim < state.dimensions; dim++) {\n                        gradPosition[dim] += gradsPosition[energyTermIndex][dim].evaluate(evaluationContext)\n                        gradMomentum[dim] += gradsMomentum[energyTermIndex][dim].evaluate(evaluationContext)\n                    }\n                }\n\n                integratorState.objects.forEach((_, otherObjectIndex) => {\n                    if (energyTerm.affectedObjectPairs[[objectIndex, otherObjectIndex].toString()]) {\n                        const otherObject = integratorState.objects[otherObjectIndex]\n                        const pairContext = makePairContext(position, momentum, otherObject.position, otherObject.momentum, state.dimensions)\n\n                        for (let dim = 0; dim < state.dimensions; dim++) {\n                            gradPosition[dim] += gradsPosition[energyTermIndex][dim].evaluate(pairContext)\n                            gradMomentum[dim] += gradsMomentum[energyTermIndex][dim].evaluate(pairContext)\n                        }\n                    }\n                })\n            })\n\n            return {\n                gradPosition: gradPosition,\n                gradMomentum: gradMomentum,\n            }\n        }\n\n        const initialIntegratorState: IntegratorState = {\n            time: 0,\n            objects: []\n        }\n\n        state.objects.forEach((object, objectIndex) => {\n            initialIntegratorState.objects.push({\n                position: [Math.random() * 400 - 200, Math.random() * 400 - 200],\n                momentum: [Math.random() * 20 - 10, Math.random() * 20 - 10],\n            })\n        })\n\n        setIntegratorState(initialIntegratorState)\n        setIntegrator(new SymplecticIntegrator(integratorConstants, getGradForObject))\n    }, [state.energyTerms, state.objects, state.dimensions])\n\n    return (\n        <>\n            {integratorState && (<>\n                <h1>Time: {integratorState.time}</h1>\n                <IntegratorStateCanvas integratorState={integratorState} />\n            </>)}\n            <input type=\"button\" value=\"Simulate\" onClick={simulate} />\n        </>\n    )\n}\n\nconst App = () => {\n    const [state, dispatch] = useAppReducer()\n\n    return (\n        <AppContext.Provider value={{ state: state, dispatch: dispatch }}>\n            <Tabs>\n                <TabList>\n                    <Tab>Simulation</Tab>\n                    <Tab>Objects</Tab>\n                    <Tab>Energy Terms</Tab>\n                </TabList>\n                <TabPanel><IntegratorComponent /></TabPanel>\n                <TabPanel><ObjectList /></TabPanel>\n                <TabPanel><EnergyTermList /></TabPanel>\n            </Tabs>\n        </AppContext.Provider >\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}