{"version":3,"sources":["Symplectic.ts","Context.ts","EnergyTermList.tsx","ObjectList.tsx","ObjectPropertyList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["vectorMulAddInline","a","b","f","i","length","vectorMulAdd","result","SymplecticIntegrator","constants","getEnergyGradients","iterate","state","dt","newState","cloneDeep","time","auxPosition","auxMomentum","objectId","objects","object","c","d","auxPos","auxMom","position","momentum","grads","gradMomentum","gradPosition","push","slice","getPresetStateAttractor","formula","energyTerms","expression","parseExpression","expressionFormula","affectedObjects","affectedObjectPairs","dimensions","initialPositionScale","initialMomentumScale","objectProperties","propertyValues","forEach","_","objectIndex","appReducer","action","type","term","index","pop","positionScale","momentumScale","name","toString","defaultValue","objectProperty","preset","coulombFormula","otherObjectIndex","getPresetStateCoulomb","gravityFormula","getPresetStateGravity","repelFormula","getPresetStateNuclear","Error","AppContext","createContext","undefined","AffectedObjectList","props","useContext","dispatch","energyTerm","map","isAffected","key","checked","onChange","AffectedObjectPairList","otherObject","pairIndex","EnergyTerm","useState","setFormula","parsed","setParsed","useEffect","parseFormula","useCallback","energyExpression","onFormulaChanged","e","target","value","style","border","padding","margin","width","color","onClick","EnergyTermList","expr","Constant","ObjectList","parseFloat","isNaN","ObjectPropertyList","IntegratorStateCanvas","canvasRef","useRef","scale","setScale","offset","setOffset","current","canvas","ctx","getContext","fillStyle","fillRect","height","integratorState","x","y","endX","endY","strokeStyle","beginPath","moveTo","lineTo","stroke","fillText","toFixed","onWheel","console","log","Math","sign","deltaY","scrolling","setScrolling","prevMousePos","setPrevMousePos","onMouseDown","button","clientX","clientY","onMouseUp","onMouseMove","delta","ref","integratorConstants","IntegratorComponent","setIntegratorState","integrator","setIntegrator","calcNextState","interval","setInterval","clearInterval","simulate","gradsPosition","gradsMomentum","termVariables","getAllVariables","energyTermGradsPosition","energyTermGradsMomentum","dim","getDerivativeForExpression","getAllDerivatives","initialIntegratorState","random","evaluationContext","variableValues","energyTermIndex","context","makeSingleContext","evaluate","otherPosition","otherMomentum","makePairContext","Presets","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4a3af37.chunk.js","sourcesContent":["import cloneDeep from \"clone-deep\"\r\n\r\n\r\nexport type ObjectState = {\r\n    position: number[]\r\n    momentum: number[]\r\n}\r\n\r\nexport type EnergyGradientFunction = (objectIndex: number, position: number[], momentum: number[], integratorState: IntegratorState) => {\r\n    gradPosition: number[],\r\n    gradMomentum: number[]\r\n}\r\n\r\nexport type IntegratorState = {\r\n    time: number\r\n    objects: ObjectState[]\r\n}\r\n\r\nexport interface Integrator {\r\n    iterate: (state: IntegratorState, dt: number) => IntegratorState\r\n}\r\n\r\nexport type SymplecticIntegratorConstants = { c: number, d: number }[]\r\n\r\nfunction vectorMulAddInline(a: number[], b: number[], f: number) {\r\n    for (let i = 0; i < a.length; i++) {\r\n        a[i] += f * b[i]\r\n    }\r\n}\r\n\r\nfunction vectorMulAdd(result: number[], a: number[], b: number[], f: number) {\r\n    for (let i = 0; i < a.length; i++) {\r\n        result[i] = a[i] + f * b[i]\r\n    }\r\n}\r\n\r\nexport class SymplecticIntegrator implements Integrator {\r\n    constructor(readonly constants: SymplecticIntegratorConstants,\r\n        readonly getEnergyGradients: EnergyGradientFunction) {\r\n    }\r\n\r\n    public iterate = (state: IntegratorState, dt: number) => {\r\n        const newState = cloneDeep(state)\r\n        newState.time += dt\r\n        dt /= 2\r\n\r\n        const auxPosition: number[][] = []\r\n        const auxMomentum: number[][] = []\r\n\r\n        // 1. Iter\r\n\r\n        for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n            const object = newState.objects[objectId]\r\n\r\n            const { c, d } = this.constants[0]\r\n\r\n            // Initialize aux position and momentum\r\n            const auxPos: number[] = []\r\n            const auxMom: number[] = []\r\n            auxPos.length = object.position.length\r\n            auxMom.length = object.momentum.length\r\n\r\n            // Calculate gradients at real coords\r\n            let grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n            vectorMulAdd(auxPos, object.position, grads.gradMomentum, dt * d)\r\n            vectorMulAdd(auxMom, object.momentum, grads.gradPosition, dt * -d)\r\n\r\n            // Calculate gradients at aux coords\r\n            grads = this.getEnergyGradients(objectId, auxPos, auxMom, state)\r\n            vectorMulAddInline(object.position, grads.gradMomentum, dt * c)\r\n            vectorMulAddInline(object.momentum, grads.gradPosition, dt * -c)\r\n\r\n            auxPosition.push(auxPos)\r\n            auxMomentum.push(auxMom)\r\n        }\r\n\r\n        for (const { c, d } of this.constants.slice(1, this.constants.length - 1)) {\r\n            for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n                const object = newState.objects[objectId]\r\n                const auxPos = auxPosition[objectId]\r\n                const auxMom = auxMomentum[objectId]\r\n\r\n                // Calculate gradients at real coords\r\n                let grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n                vectorMulAddInline(auxPos, grads.gradMomentum, dt * d)\r\n                vectorMulAddInline(auxMom, grads.gradPosition, dt * -d)\r\n\r\n                // Calculate gradients at aux coords\r\n                grads = this.getEnergyGradients(objectId, auxPos, auxMom, state)\r\n                vectorMulAddInline(object.position, grads.gradMomentum, dt * c)\r\n                vectorMulAddInline(object.momentum, grads.gradPosition, dt * -c)\r\n            }\r\n        }\r\n\r\n        for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n            const d = this.constants[this.constants.length - 1].d\r\n\r\n            const object = newState.objects[objectId]\r\n            const auxPos = auxPosition[objectId]\r\n\r\n            // Calculate gradients at real coords\r\n            const grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n            vectorMulAdd(object.position, auxPos, grads.gradMomentum, dt * d)\r\n        }\r\n\r\n        // 2. Iter\r\n        for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n            const object = newState.objects[objectId]\r\n\r\n            const { c, d } = this.constants[0]\r\n\r\n            // Initialize aux position and momentum\r\n            const auxPos = auxPosition[objectId]\r\n            const auxMom = auxMomentum[objectId]\r\n\r\n            // Calculate gradients at real coords\r\n            let grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n            vectorMulAdd(auxPos, object.position, grads.gradMomentum, dt * d)\r\n            vectorMulAdd(auxMom, object.momentum, grads.gradPosition, dt * -d)\r\n\r\n            // Calculate gradients at aux coords\r\n            grads = this.getEnergyGradients(objectId, auxPos, auxMom, state)\r\n            vectorMulAddInline(object.position, grads.gradMomentum, dt * c)\r\n            vectorMulAddInline(object.momentum, grads.gradPosition, dt * -c)\r\n        }\r\n\r\n        for (const { c, d } of this.constants.slice(1, this.constants.length - 1)) {\r\n            for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n                const object = newState.objects[objectId]\r\n                const auxPos = auxPosition[objectId]\r\n                const auxMom = auxMomentum[objectId]\r\n\r\n                // Calculate gradients at real coords\r\n                let grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n                vectorMulAddInline(auxPos, grads.gradMomentum, dt * d)\r\n                vectorMulAddInline(auxMom, grads.gradPosition, dt * -d)\r\n\r\n                // Calculate gradients at aux coords\r\n                grads = this.getEnergyGradients(objectId, auxPos, auxMom, state)\r\n                vectorMulAddInline(object.position, grads.gradMomentum, dt * c)\r\n                vectorMulAddInline(object.momentum, grads.gradPosition, dt * -c)\r\n            }\r\n        }\r\n\r\n        for (let objectId = 0; objectId < newState.objects.length; objectId++) {\r\n            const d = this.constants[this.constants.length - 1].d\r\n\r\n            const object = newState.objects[objectId]\r\n            const auxMom = auxMomentum[objectId]\r\n\r\n            // Calculate gradients at real coords\r\n            const grads = this.getEnergyGradients(objectId, object.position, object.momentum, state)\r\n            vectorMulAdd(object.momentum, auxMom, grads.gradPosition, dt * -d)\r\n        }\r\n\r\n        return newState\r\n    }\r\n}","import { Dispatch, createContext, useReducer } from \"react\"\r\nimport { Expression, parseExpression } from \"tadiff\"\r\n\r\nexport class AppEnergyTerm {\r\n    constructor(public expression: Expression, public expressionFormula: string,\r\n        public affectedObjects: { [objectIndex: number]: boolean },\r\n        public affectedObjectPairs: { [objectIndices: string]: boolean }) {\r\n    }\r\n}\r\n\r\nexport type AppObjectProperty = {\r\n    name: string\r\n    defaultValue: number\r\n}\r\n\r\nexport type AppObject = {\r\n    propertyValues: { [propertyName: string]: number }\r\n}\r\n\r\nexport type AppState = {\r\n    energyTerms: AppEnergyTerm[]\r\n    objects: AppObject[]\r\n    dimensions: number\r\n    initialPositionScale: number\r\n    initialMomentumScale: number\r\n    objectProperties: AppObjectProperty[]\r\n}\r\n\r\n\r\nexport type AppActionAddEnergyTerm = {\r\n    type: \"addEnergyTerm\"\r\n    term: AppEnergyTerm\r\n}\r\n\r\nexport type AppActionUpdateEnergyTerm = {\r\n    type: \"updateEnergyTerm\"\r\n    index: number\r\n    term: AppEnergyTerm\r\n}\r\n\r\nexport type AppActionRemoveEnergyTerm = {\r\n    type: \"removeEnergyTerm\"\r\n}\r\n\r\nexport type AppActionAddObject = {\r\n    type: \"addObject\"\r\n}\r\n\r\nexport type AppActionUpdateObject = {\r\n    type: \"updateObject\"\r\n    index: number\r\n    object: AppObject\r\n}\r\n\r\nexport type AppActionRemoveObject = {\r\n    type: \"removeObject\"\r\n}\r\n\r\nexport type AppActionAddObjectProperty = {\r\n    type: \"addObjectProperty\"\r\n}\r\n\r\nexport type AppActionUpdateObjectProperty = {\r\n    type: \"updateObjectProperty\"\r\n    name: string\r\n    defaultValue: number\r\n}\r\n\r\nexport type AppActionRemoveObjectProperty = {\r\n    type: \"removeObjectProperty\"\r\n}\r\n\r\nexport type AppActionSetInitialScales = {\r\n    type: \"setInitialScales\"\r\n    positionScale: number\r\n    momentumScale: number\r\n}\r\n\r\nexport type AppActionLoadState = {\r\n    type: \"loadState\"\r\n    state: AppState\r\n}\r\n\r\nexport type AppActionLoadPreset = {\r\n    type: \"loadPreset\"\r\n    preset: \"gravity\" | \"coulomb\" | \"attractor\" | \"nuclear\"\r\n}\r\n\r\nexport type AppAction = AppActionAddEnergyTerm | AppActionUpdateEnergyTerm |\r\n    AppActionRemoveEnergyTerm | AppActionAddObject | AppActionRemoveObject |\r\n    AppActionSetInitialScales | AppActionLoadState | AppActionAddObjectProperty |\r\n    AppActionRemoveObjectProperty | AppActionUpdateObjectProperty | AppActionUpdateObject |\r\n    AppActionLoadPreset\r\n\r\nfunction getPresetStateGravity(): AppState {\r\n    const kineticEnergyFormula = \"0.5 * (p0^2 + p1^2) / m\"\r\n    const gravityFormula = \"-0.01 * m * m_b / sqrt((q0 - q0_b)^2 + (q1 - q1_b)^2)\"\r\n\r\n    const state: AppState = {\r\n        energyTerms: [{\r\n            expression: parseExpression(kineticEnergyFormula),\r\n            expressionFormula: kineticEnergyFormula,\r\n            affectedObjects: {},\r\n            affectedObjectPairs: {}\r\n        }, {\r\n            expression: parseExpression(gravityFormula),\r\n            expressionFormula: gravityFormula,\r\n            affectedObjects: {},\r\n            affectedObjectPairs: {}\r\n        }],\r\n        objects: [],\r\n        dimensions: 2,\r\n        initialPositionScale: 50,\r\n        initialMomentumScale: 5,\r\n        objectProperties: [{\r\n            name: \"m\",\r\n            defaultValue: 1\r\n        }]\r\n    }\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n        state.objects.push({\r\n            propertyValues: {\r\n                \"m\": i === 0 ? 10000 : i\r\n            }\r\n        })\r\n    }\r\n\r\n    state.objects.forEach((_, objectIndex) => {\r\n        state.energyTerms[0].affectedObjects[objectIndex] = true\r\n    })\r\n\r\n    state.objects.forEach((_, objectIndex) => {\r\n        state.objects.forEach((_, otherObjectIndex) => {\r\n            if (objectIndex !== otherObjectIndex) {\r\n                state.energyTerms[1].affectedObjectPairs[[objectIndex, otherObjectIndex].toString()] = true\r\n            }\r\n        })\r\n    })\r\n\r\n    return state\r\n}\r\n\r\nfunction getPresetStateCoulomb(): AppState {\r\n    const kineticEnergyFormula = \"0.5 * (p0^2 + p1^2) / m\"\r\n    const coulombFormula = \"10000 * Q * Q_b / sqrt((q0 - q0_b)^2 + (q1 - q1_b)^2)\"\r\n\r\n    const state: AppState = {\r\n        energyTerms: [{\r\n            expression: parseExpression(kineticEnergyFormula),\r\n            expressionFormula: kineticEnergyFormula,\r\n            affectedObjects: {},\r\n            affectedObjectPairs: {}\r\n        }, {\r\n            expression: parseExpression(coulombFormula),\r\n            expressionFormula: coulombFormula,\r\n            affectedObjects: {},\r\n            affectedObjectPairs: {}\r\n        }],\r\n        objects: [],\r\n        dimensions: 2,\r\n        initialPositionScale: 50,\r\n        initialMomentumScale: 0,\r\n        objectProperties: [{\r\n            name: \"Q\",\r\n            defaultValue: 1\r\n        }, {\r\n            name: \"m\",\r\n            defaultValue: 1\r\n        }]\r\n    }\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n        state.objects.push({\r\n            propertyValues: {\r\n                \"Q\": i % 2 === 0 ? 1 : -1\r\n            }\r\n        })\r\n    }\r\n\r\n    state.objects.forEach((_, objectIndex) => {\r\n        state.energyTerms[0].affectedObjects[objectIndex] = true\r\n    })\r\n\r\n    state.objects.forEach((_, objectIndex) => {\r\n        state.objects.forEach((_, otherObjectIndex) => {\r\n            if (objectIndex !== otherObjectIndex) {\r\n                state.energyTerms[1].affectedObjectPairs[[objectIndex, otherObjectIndex].toString()] = true\r\n            }\r\n        })\r\n    })\r\n\r\n    return state\r\n}\r\n\r\nfunction getPresetStateAttractor(): AppState {\r\n    const formula = \"0.5 * (q0^2 + q1^2) + q0 * (q0^2 - q1^2 / 3.0) + 0.5 * (p1^2 + p0^2)\"\r\n\r\n    const state: AppState = {\r\n        energyTerms: [{\r\n            expression: parseExpression(formula),\r\n            expressionFormula: formula,\r\n            affectedObjects: {},\r\n            affectedObjectPairs: {}\r\n        }],\r\n        objects: [],\r\n        dimensions: 2,\r\n        initialPositionScale: 0.3,\r\n        initialMomentumScale: 0.3,\r\n        objectProperties: []\r\n    }\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n        state.objects.push({\r\n            propertyValues: {}\r\n        })\r\n    }\r\n\r\n    state.objects.forEach((_, objectIndex) => {\r\n        state.energyTerms[0].affectedObjects[objectIndex] = true\r\n    })\r\n\r\n    return state\r\n}\r\n\r\nfunction getPresetStateNuclear(): AppState {\r\n    const kineticEnergyFormula = \"0.5 * (p0^2 + p1^2) / m\"\r\n    const attractFormula = \"-1 / sqrt((q0 - q0_b)^2 + (q1 - q1_b)^2)\"\r\n    const repelFormula = \"3 * exp(-3 * sqrt((q0 - q0_b)^2 + (q1 - q1_b)^2)) / sqrt((q0 - q0_b)^2 + (q1 - q1_b)^2)\"\r\n\r\n    const state: AppState = {\r\n        energyTerms: [{\r\n            expression: parseExpression(kineticEnergyFormula),\r\n            expressionFormula: kineticEnergyFormula,\r\n            affectedObjects: {},\r\n            affectedObjectPairs: {}\r\n        }, {\r\n            expression: parseExpression(attractFormula),\r\n            expressionFormula: attractFormula,\r\n            affectedObjects: {},\r\n            affectedObjectPairs: {}\r\n        }, {\r\n            expression: parseExpression(repelFormula),\r\n            expressionFormula: repelFormula,\r\n            affectedObjects: {},\r\n            affectedObjectPairs: {}\r\n        }],\r\n        objects: [],\r\n        dimensions: 2,\r\n        initialPositionScale: 10,\r\n        initialMomentumScale: 0,\r\n        objectProperties: [{\r\n            name: \"m\",\r\n            defaultValue: 1\r\n        }]\r\n    }\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n        state.objects.push({\r\n            propertyValues: {}\r\n        })\r\n    }\r\n\r\n    state.objects.forEach((_, objectIndex) => {\r\n        state.energyTerms[0].affectedObjects[objectIndex] = true\r\n    })\r\n\r\n    state.objects.forEach((_, objectIndex) => {\r\n        state.objects.forEach((_, otherObjectIndex) => {\r\n            if (objectIndex !== otherObjectIndex) {\r\n                state.energyTerms[1].affectedObjectPairs[[objectIndex, otherObjectIndex].toString()] = true\r\n                state.energyTerms[2].affectedObjectPairs[[objectIndex, otherObjectIndex].toString()] = true\r\n            }\r\n        })\r\n    })\r\n\r\n    return state\r\n}\r\n\r\nfunction appReducer(state: AppState, action: AppAction) {\r\n    switch (action.type) {\r\n        case \"addEnergyTerm\": {\r\n            return { ...state, energyTerms: [...state.energyTerms, action.term] }\r\n        } case \"updateEnergyTerm\": {\r\n            const energyTerms = [...state.energyTerms]\r\n            energyTerms[action.index] = action.term\r\n            return { ...state, energyTerms: energyTerms }\r\n        } case \"removeEnergyTerm\": {\r\n            const energyTerms = [...state.energyTerms]\r\n            energyTerms.pop()\r\n            return { ...state, energyTerms: energyTerms }\r\n        } case \"addObject\": {\r\n            const newObject: AppObject = { propertyValues: {} }\r\n            return { ...state, objects: [...state.objects, newObject] }\r\n        } case \"updateObject\": {\r\n            const objects = [...state.objects]\r\n            objects[action.index] = action.object\r\n            return { ...state, objects: objects }\r\n        } case \"removeObject\": {\r\n            const objects = [...state.objects]\r\n            objects.pop()\r\n            return { ...state, objects: objects }\r\n        } case \"setInitialScales\": {\r\n            return {\r\n                ...state,\r\n                initialPositionScale: action.positionScale,\r\n                initialMomentumScale: action.momentumScale\r\n            }\r\n        } case \"loadState\": {\r\n            return action.state\r\n        } case \"addObjectProperty\": {\r\n            const objectProperties: AppObjectProperty[] = [\r\n                ...state.objectProperties,\r\n                { name: \"x\" + state.objectProperties.length.toString(), defaultValue: 0 }\r\n            ]\r\n            return {\r\n                ...state,\r\n                objectProperties: objectProperties\r\n            }\r\n        } case \"removeObjectProperty\": {\r\n            const objectProperties = [...state.objectProperties]\r\n            objectProperties.pop()\r\n            return { ...state, objectProperties: objectProperties }\r\n        } case \"updateObjectProperty\": {\r\n            const objectProperties = [...state.objectProperties]\r\n            objectProperties.forEach((objectProperty, index) => {\r\n                if (objectProperty.name === action.name) {\r\n                    objectProperties[index] = {\r\n                        name: action.name,\r\n                        defaultValue: action.defaultValue\r\n                    }\r\n                }\r\n            })\r\n            return { ...state, objectProperties: objectProperties }\r\n        } case \"loadPreset\": {\r\n            switch (action.preset) {\r\n                case \"coulomb\":\r\n                    return getPresetStateCoulomb()\r\n                case \"gravity\":\r\n                    return getPresetStateGravity()\r\n                case \"attractor\":\r\n                    return getPresetStateAttractor()\r\n                case \"nuclear\":\r\n                    return getPresetStateNuclear()\r\n                default:\r\n                    throw new Error(\"Unknown preset \" + action.preset)\r\n            }\r\n        }\r\n    }\r\n\r\n    throw new Error(\"Unhandled action in reducer\")\r\n}\r\n\r\nexport function useAppReducer() {\r\n    return useReducer(appReducer, getPresetStateAttractor())\r\n}\r\n\r\nexport const AppContext = createContext<{ state: AppState, dispatch: Dispatch<AppAction> } | undefined>(undefined)","import React, { useState, useCallback, useContext, useEffect } from \"react\"\r\nimport { parseExpression, Expression, Constant } from \"tadiff\"\r\nimport { AppContext, AppEnergyTerm } from \"./Context\"\r\n\r\ntype EnergyTermProps = {\r\n    index: number\r\n}\r\n\r\nfunction makeEnergyTerm(expr: Expression, formula: string): AppEnergyTerm {\r\n    return {\r\n        expression: expr,\r\n        expressionFormula: formula,\r\n        affectedObjects: {},\r\n        affectedObjectPairs: {}\r\n    }\r\n}\r\n\r\nfunction AffectedObjectList(props: EnergyTermProps) {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    const index = props.index\r\n\r\n    const energyTerm = state.energyTerms[index]\r\n\r\n    return (\r\n        <div>\r\n            {state.objects.map((object, objectIndex) => {\r\n                const isAffected = !!energyTerm.affectedObjects[objectIndex]\r\n\r\n                const onChange = () => dispatch({\r\n                    type: \"updateEnergyTerm\",\r\n                    index: index,\r\n                    term: {\r\n                        ...energyTerm,\r\n                        affectedObjects: {\r\n                            ...energyTerm.affectedObjects,\r\n                            [objectIndex]: !isAffected\r\n                        }\r\n                    }\r\n                })\r\n\r\n                return <input type=\"checkbox\" key={objectIndex} checked={isAffected} onChange={onChange} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AffectedObjectPairList(props: EnergyTermProps) {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    const index = props.index\r\n\r\n    const energyTerm = state.energyTerms[index]\r\n\r\n    return (\r\n        <div>\r\n            {state.objects.map((object, objectIndex) =>\r\n                <div key={objectIndex}>\r\n                    {state.objects.map((otherObject, otherObjectIndex) => {\r\n                        const pairIndex = [objectIndex, otherObjectIndex].toString()\r\n                        const isAffected = !!energyTerm.affectedObjectPairs[pairIndex]\r\n\r\n                        const onChange = () => dispatch({\r\n                            type: \"updateEnergyTerm\",\r\n                            index: index,\r\n                            term: {\r\n                                ...energyTerm,\r\n                                affectedObjectPairs: {\r\n                                    ...energyTerm.affectedObjectPairs,\r\n                                    [pairIndex]: !isAffected\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                        return <input type=\"checkbox\" key={otherObjectIndex} checked={isAffected} onChange={onChange} />\r\n                    })}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction EnergyTerm(props: EnergyTermProps) {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    const [formula, setFormula] = useState(\"\")\r\n    const [parsed, setParsed] = useState(true)\r\n    const index = props.index\r\n\r\n    const energyTerm = state.energyTerms[index]\r\n\r\n    useEffect(() => {\r\n        if (formula === \"\") {\r\n            setFormula(energyTerm.expressionFormula)\r\n        }\r\n    }, [energyTerm, formula])\r\n\r\n    const parseFormula = useCallback(() => {\r\n        const energyExpression = parseExpression(formula)\r\n        setParsed(true)\r\n        dispatch({ type: \"updateEnergyTerm\", index: index, term: { ...energyTerm, expression: energyExpression, expressionFormula: formula } })\r\n    }, [formula, index, dispatch, energyTerm])\r\n\r\n    const onFormulaChanged = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormula(e.target.value)\r\n        setParsed(false)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ border: \"2px solid black\", padding: \"4px\", margin: \"4px\" }}>\r\n            <h2>Energy {index}</h2>\r\n            <input type=\"text\" style={{ width: 800, color: parsed ? \"black\" : \"red\" }} onChange={onFormulaChanged} value={formula} />\r\n            <input type=\"button\" value=\"Parse\" onClick={parseFormula} />\r\n\r\n            <h3>Affected objects</h3>\r\n            <AffectedObjectList index={index} />\r\n\r\n            <h3>Affected object pairs</h3>\r\n            <AffectedObjectPairList index={index} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function EnergyTermList() {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    const energyTerms = state.energyTerms\r\n\r\n    return (\r\n        <div style={{}}>\r\n            <h1>Energy terms</h1>\r\n            <div>\r\n                {energyTerms.map((term, index) => <EnergyTerm key={index} index={index} />)}\r\n            </div>\r\n            <input type=\"button\" value=\"Add\" onClick={() => dispatch({ type: \"addEnergyTerm\", term: makeEnergyTerm(new Constant(0), \"0\") })} />\r\n            <input type=\"button\" value=\"Remove\" onClick={() => dispatch({ type: \"removeEnergyTerm\" })} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { AppContext } from \"./Context\"\r\n\r\nexport function ObjectList() {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    return (\r\n        <div>\r\n            <h1>Objects Count: {state.objects.length}</h1>\r\n            <input type=\"button\" value=\"Add\" onClick={() => dispatch({ type: \"addObject\" })} />\r\n            <input type=\"button\" value=\"Remove\" onClick={() => dispatch({ type: \"removeObject\" })} />\r\n            <div>\r\n                {state.objects.map((object, objectIndex) => {\r\n                    return (\r\n                        <div key={objectIndex} style={{ border: \"2px solid black\", padding: \"4px\", margin: \"4px\" }}>\r\n                            <div>Object {objectIndex}</div>\r\n                            {state.objectProperties.map(objectProperty => {\r\n                                return (\r\n                                    <div>\r\n                                        <label>{objectProperty.name}: </label>\r\n                                        <input type=\"text\" value={object.propertyValues[objectProperty.name]} onChange={e => {\r\n                                            if (e.target.value === \"\") {\r\n                                                const propertyValues = { ...object.propertyValues }\r\n                                                delete propertyValues[objectProperty.name]\r\n\r\n                                                dispatch({\r\n                                                    type: \"updateObject\",\r\n                                                    index: objectIndex,\r\n                                                    object: {\r\n                                                        ...object,\r\n                                                        propertyValues: propertyValues\r\n                                                    }\r\n                                                })\r\n                                            } else {\r\n                                                const value = parseFloat(e.target.value)\r\n                                                if (!isNaN(value)) {\r\n                                                    dispatch({\r\n                                                        type: \"updateObject\",\r\n                                                        index: objectIndex,\r\n                                                        object: {\r\n                                                            ...object,\r\n                                                            propertyValues: {\r\n                                                                ...object.propertyValues,\r\n                                                                [objectProperty.name]: value\r\n                                                            }\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                        }} />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from \"react\"\r\nimport { AppContext } from \"./Context\"\r\n\r\nexport function ObjectPropertyList() {\r\n    const { state, dispatch } = useContext(AppContext)!\r\n\r\n    return (\r\n        <div>\r\n            <h1>Object Properties</h1>\r\n            <div>\r\n                {state.objectProperties.map((objectProperty, index) => {\r\n                    return (\r\n                        <div key={objectProperty.name} style={{ border: \"2px solid black\", padding: \"4px\", margin: \"4px\" }}>\r\n                            <h2>Property {objectProperty.name}</h2>\r\n                            <label>Default:</label>\r\n                            <input type=\"text\" value={objectProperty.defaultValue} onChange={e => {\r\n                                const value = parseFloat(e.target.value)\r\n                                if (!isNaN(value)) {\r\n                                    dispatch({\r\n                                        type: \"updateObjectProperty\",\r\n                                        name: objectProperty.name,\r\n                                        defaultValue: value\r\n                                    })\r\n                                }\r\n                            }} />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <input type=\"button\" value=\"Add\" onClick={() => dispatch({ type: \"addObjectProperty\" })} />\r\n            <input type=\"button\" value=\"Remove\" onClick={() => dispatch({ type: \"removeObjectProperty\" })} />\r\n        </div>\r\n    )\r\n}","import React, { useState, useCallback, useRef, useEffect, useContext } from 'react'\n\nimport { SymplecticIntegrator, IntegratorState } from \"./Symplectic\"\n\nimport { getAllDerivatives, getDerivativeForExpression, getAllVariables } from \"tadiff\"\nimport * as e from \"tadiff/expressions\"\n\nimport { AppContext, useAppReducer, AppState } from \"./Context\"\nimport EnergyTermList from './EnergyTermList'\nimport { ObjectList } from './ObjectList'\nimport { Tabs, TabPanel, TabList, Tab } from 'react-tabs'\nimport \"react-tabs/style/react-tabs.css\"\nimport { ObjectPropertyList } from './ObjectPropertyList'\n\nconst IntegratorStateCanvas = (props: { integratorState: IntegratorState }) => {\n    const { state } = useContext(AppContext)!\n\n    const canvasRef = useRef<HTMLCanvasElement>(null)\n\n    const [scale, setScale] = useState(200 / state.initialPositionScale)\n    const [offset, setOffset] = useState([0, 0])\n\n    useEffect(() => {\n        if (canvasRef.current) {\n            const canvas = canvasRef.current\n            const ctx = canvas.getContext(\"2d\")\n            if (ctx) {\n                ctx.fillStyle = \"rgb(20, 20, 20)\"\n                ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n                ctx.fillStyle = \"red\"\n                for (const object of props.integratorState.objects) {\n                    const [x, y] = [object.position[0], object.position[1]]\n\n                    const [endX, endY] = [object.position[0] + object.momentum[0], object.position[1] + object.momentum[1]]\n                    ctx.strokeStyle = \"blue\"\n                    ctx.beginPath()\n                    ctx.moveTo(scale * x + canvas.width / 2 + offset[0], scale * y + canvas.height / 2 + offset[1])\n                    ctx.lineTo(scale * endX + canvas.width / 2 + offset[0], scale * endY + canvas.height / 2 + offset[1])\n                    ctx.stroke()\n\n                    ctx.fillRect(scale * x - 2 + canvas.width / 2 + offset[0], scale * y - 2 + canvas.height / 2 + offset[1], 4, 4)\n                }\n\n                ctx.strokeStyle = \"lime\"\n                ctx.beginPath()\n                ctx.moveTo(10, 10)\n                ctx.lineTo(110, 10)\n                ctx.stroke()\n                ctx.fillStyle = \"lime\"\n                ctx.fillText((100 / scale).toFixed(2), 50, 20)\n\n                ctx.fillText(`t: ${props.integratorState.time.toFixed(2)}`, canvas.width - 50, 20)\n            }\n        }\n    }, [props.integratorState, canvasRef, scale, offset])\n\n    const onWheel = useCallback((e: React.WheelEvent<HTMLCanvasElement>) => {\n        console.log(scale)\n        setScale(scale * (1 - 0.1 * Math.sign(e.deltaY)))\n    }, [scale, setScale])\n\n    const [scrolling, setScrolling] = useState(false)\n    const [prevMousePos, setPrevMousePos] = useState([0, 0])\n    const onMouseDown = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n        if (e.button === 0) {\n            setScrolling(true)\n            setPrevMousePos([e.clientX, e.clientY])\n        }\n    }, [setScrolling, setPrevMousePos])\n\n    const onMouseUp = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n        if (e.button === 0) {\n            setScrolling(false)\n        }\n    }, [setScrolling])\n\n    const onMouseMove = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n        if (scrolling) {\n            const delta = [e.clientX - prevMousePos[0], e.clientY - prevMousePos[1]]\n\n            setOffset([offset[0] + delta[0], offset[1] + delta[1]])\n            setPrevMousePos([e.clientX, e.clientY])\n        }\n    }, [scrolling, prevMousePos, setPrevMousePos, offset])\n\n    return <canvas width=\"1000\" height=\"1000\" ref={canvasRef} onWheel={onWheel}\n        onMouseDown={onMouseDown} onMouseMove={onMouseMove} onMouseUp={onMouseUp} />\n}\n\nconst integratorConstants = [\n    { c: 0.2465881872786138277570711850755, d: 0.0833333333333333333333333333333 },\n    { c: 0.6047073875057809013986983841500, d: 0.3977675859548440074217908138861 },\n    { c: -0.4009869039788007481085648931513, d: -0.0393336931446257363828544842332 },\n    { c: 0.0993826583888120379055906478517, d: 0.0582327738564483956277303370138 },\n    { c: -0.4009869039788007481085648931513, d: 0.0582327738564483956277303370138 },\n    { c: 0.6047073875057809013986983841500, d: -0.0393336931446257363828544842332 },\n    { c: 0.2465881872786138277570711850755, d: 0.3977675859548440074217908138861 },\n    { c: 0.0000000000000000000000000000000, d: 0.0833333333333333333333333333333 },\n]\n\nfunction makeSingleContext(context: e.EvaluationContext, position: number[], momentum: number[], dimensions: number, objectIndex: number, state: AppState) {\n    const object = state.objects[objectIndex]\n    for (const objectProperty of state.objectProperties) {\n        if (object.propertyValues[objectProperty.name] !== undefined) {\n            context.variableValues[objectProperty.name] = object.propertyValues[objectProperty.name]\n        } else {\n            context.variableValues[objectProperty.name] = objectProperty.defaultValue\n        }\n    }\n\n    for (let dim = 0; dim < dimensions; dim++) {\n        context.variableValues[`p${dim}`] = momentum[dim]\n        context.variableValues[`q${dim}`] = position[dim]\n    }\n}\n\nfunction makePairContext(context: e.EvaluationContext, position: number[], momentum: number[], otherPosition: number[], otherMomentum: number[], dimensions: number, objectIndex: number, otherObjectIndex: number, state: AppState) {\n    const otherObject = state.objects[otherObjectIndex]\n    for (const objectProperty of state.objectProperties) {\n        if (otherObject.propertyValues[objectProperty.name] !== undefined) {\n            context.variableValues[`${objectProperty.name}_b`] = otherObject.propertyValues[objectProperty.name]\n        } else {\n            context.variableValues[`${objectProperty.name}_b`] = objectProperty.defaultValue\n        }\n    }\n\n    for (let dim = 0; dim < dimensions; dim++) {\n        context.variableValues[`p${dim}_b`] = otherMomentum[dim]\n        context.variableValues[`q${dim}_b`] = otherPosition[dim]\n    }\n}\n\nconst stepSize = 0.02\nconst speed = 1\n\nconst IntegratorComponent = () => {\n    const { state, dispatch } = useContext(AppContext)!\n\n    const { initialPositionScale, initialMomentumScale } = state\n\n    const [integratorState, setIntegratorState] = useState<IntegratorState | null>(null)\n\n    const [integrator, setIntegrator] = useState<SymplecticIntegrator | null>(null)\n\n    const calcNextState = useCallback(() => {\n        if (integrator && integratorState) {\n            const newState = integrator.iterate(integratorState, stepSize)\n            setIntegratorState(newState)\n        }\n    }, [integratorState, setIntegratorState, integrator])\n\n    useEffect(() => {\n        const interval = setInterval(calcNextState, 1000 * stepSize / speed)\n        return () => clearInterval(interval)\n    }, [calcNextState])\n\n    const simulate = useCallback(() => {\n        const energyTerms = state.energyTerms\n\n        const gradsPosition: e.Expression[][] = []\n        const gradsMomentum: e.Expression[][] = []\n\n        for (const energyTerm of energyTerms) {\n            const termVariables = getAllVariables(energyTerm.expression)\n\n            const energyTermGradsPosition = []\n            const energyTermGradsMomentum = []\n\n            for (let dim = 0; dim < state.dimensions; dim++) {\n                const gradPosition = getDerivativeForExpression(termVariables[\"q\" + dim.toString()], getAllDerivatives(energyTerm.expression, new e.Constant(1)))\n                const gradMomentum = getDerivativeForExpression(termVariables[\"p\" + dim.toString()], getAllDerivatives(energyTerm.expression, new e.Constant(1)))\n\n                energyTermGradsPosition.push(gradPosition)\n                energyTermGradsMomentum.push(gradMomentum)\n            }\n\n            gradsPosition.push(energyTermGradsPosition)\n            gradsMomentum.push(energyTermGradsMomentum)\n        }\n\n        const getGradForObject = (objectIndex: number, position: number[], momentum: number[], integratorState: IntegratorState) => {\n            const evaluationContext: e.EvaluationContext = {\n                variableValues: {}\n            }\n\n            const gradPosition: number[] = []\n            const gradMomentum: number[] = []\n\n            for (let dim = 0; dim < state.dimensions; dim++) {\n                gradPosition.push(0)\n                gradMomentum.push(0)\n            }\n\n            state.energyTerms.forEach((energyTerm, energyTermIndex) => {\n                makeSingleContext(evaluationContext, position, momentum, state.dimensions, objectIndex, state)\n\n                if (energyTerm.affectedObjects[objectIndex]) {\n                    for (let dim = 0; dim < state.dimensions; dim++) {\n                        gradPosition[dim] += gradsPosition[energyTermIndex][dim].evaluate(evaluationContext)\n                        gradMomentum[dim] += gradsMomentum[energyTermIndex][dim].evaluate(evaluationContext)\n                    }\n                }\n\n                integratorState.objects.forEach((_, otherObjectIndex) => {\n                    if (energyTerm.affectedObjectPairs[[objectIndex, otherObjectIndex].toString()]) {\n                        const otherObject = integratorState.objects[otherObjectIndex]\n                        makePairContext(evaluationContext, position, momentum, otherObject.position, otherObject.momentum, state.dimensions, objectIndex, otherObjectIndex, state)\n\n                        for (let dim = 0; dim < state.dimensions; dim++) {\n                            gradPosition[dim] += gradsPosition[energyTermIndex][dim].evaluate(evaluationContext)\n                            gradMomentum[dim] += gradsMomentum[energyTermIndex][dim].evaluate(evaluationContext)\n                        }\n                    }\n                })\n            })\n\n            return {\n                gradPosition: gradPosition,\n                gradMomentum: gradMomentum,\n            }\n        }\n\n        const initialIntegratorState: IntegratorState = {\n            time: 0,\n            objects: []\n        }\n\n        state.objects.forEach((object, objectIndex) => {\n            initialIntegratorState.objects.push({\n                position: [Math.random() * initialPositionScale - initialPositionScale / 2, Math.random() * initialPositionScale - initialPositionScale / 2],\n                momentum: [Math.random() * initialMomentumScale - initialMomentumScale / 2, Math.random() * initialMomentumScale - initialMomentumScale / 2],\n            })\n        })\n\n        setIntegratorState(initialIntegratorState)\n        setIntegrator(new SymplecticIntegrator(integratorConstants, getGradForObject))\n    }, [state, initialPositionScale, initialMomentumScale])\n\n    useEffect(simulate, [])\n\n    return (\n        <>\n            <input type=\"button\" value=\"Simulate\" onClick={simulate} />\n\n            <div>\n                <label>Initial position scale: </label>\n                <input type=\"text\" onChange={e => {\n                    const value = parseFloat(e.target.value)\n                    if (!isNaN(value)) {\n                        dispatch({\n                            type: \"setInitialScales\",\n                            positionScale: value,\n                            momentumScale: initialMomentumScale\n                        })\n                    }\n                }} defaultValue={initialPositionScale.toString()} />\n            </div>\n            <div>\n                <label>Initial momentum scale: </label>\n                <input type=\"text\" onChange={e => {\n                    const value = parseFloat(e.target.value)\n                    if (!isNaN(value)) {\n                        dispatch({\n                            type: \"setInitialScales\",\n                            positionScale: initialPositionScale,\n                            momentumScale: value\n                        })\n                    }\n                }} defaultValue={initialMomentumScale.toString()} />\n            </div>\n\n            {integratorState && (<>\n                <IntegratorStateCanvas integratorState={integratorState} />\n            </>)}\n        </>\n    )\n}\n\nfunction Presets() {\n    const { dispatch } = useContext(AppContext)!\n\n    return (\n        <div>\n            <input type=\"button\" value=\"Gravity\" onClick={e => dispatch({ type: \"loadPreset\", preset: \"gravity\" })} />\n            <input type=\"button\" value=\"Coulomb\" onClick={e => dispatch({ type: \"loadPreset\", preset: \"coulomb\" })} />\n            <input type=\"button\" value=\"Attractor\" onClick={e => dispatch({ type: \"loadPreset\", preset: \"attractor\" })} />\n            <input type=\"button\" value=\"Nuclear\" onClick={e => dispatch({ type: \"loadPreset\", preset: \"nuclear\" })} />\n        </div>\n    )\n}\n\nconst App = () => {\n    const [state, dispatch] = useAppReducer()\n\n    return (\n        <AppContext.Provider value={{ state: state, dispatch: dispatch }}>\n            <Tabs>\n                <TabList>\n                    <Tab>Simulation</Tab>\n                    <Tab>Objects</Tab>\n                    <Tab>Energy Terms</Tab>\n                    <Tab>Presets</Tab>\n                </TabList>\n                <TabPanel><IntegratorComponent /></TabPanel>\n                <TabPanel><ObjectPropertyList /><ObjectList /></TabPanel>\n                <TabPanel><EnergyTermList /></TabPanel>\n                <TabPanel><Presets /></TabPanel>\n            </Tabs>\n        </AppContext.Provider >\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}