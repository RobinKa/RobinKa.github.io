{"version":3,"sources":["models/UNet.ts","Painter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["createUNet","inputShape","outputFilters","layers","filters","input","tf","shape","downs","i","push","conv2d","Math","pow","kernelSize","padding","strides","activation","apply","length","ups","last","upsampled","conv2dTranspose","concatenated","concatenate","axis","processed","inputs","outputs","Painter","props","_run","Object","asyncToGenerator","regenerator_default","a","mark","_callee","flatImage","canvas","ctx","imageData","imageTensor","noiseShape","model","noise","iter","pred","x","y","domImage","wrap","_context","prev","next","document","createElement","width","height","getContext","createImageData","reshape","slice","compile","optimizer","loss","concat","iterations","fit","batchSize","epochs","predict","array","sent","data","min","max","putImageData","src","toDataURL","body","appendChild","stop","this","arguments","_useDropzone","useDropzone","accept","onDrop","files","image","Image","onload","evt","context","drawImage","getImageData","_x","run","Array","from","file","reader","FileReader","target","readyState","DONE","result","readAsDataURL","getRootProps","getInputProps","react_default","style","marginTop","marginBottom","textAlign","App","_useState","useState","_useState2","slicedToArray","setWidth","_useState3","_useState4","setHeight","_useState5","_useState6","generating","setGenerating","_useState7","_useState8","setLayers","_useState9","_useState10","setFilters","marginLeft","marginRight","href","fontSize","visibility","rc_slider_es","defaultValue","step","onChange","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c09d31d5.chunk.js","sourcesContent":["import * as tf from \"@tensorflow/tfjs\"\r\n\r\nexport function createUNet(inputShape: [number, number, number], outputFilters: number, layers: number, filters: number) {\r\n    const input = tf.input({ shape: inputShape })\r\n\r\n    const downs = [input]\r\n    for (let i = 0; i < layers; i++) {\r\n        downs.push(tf.layers.conv2d({\r\n            filters: Math.pow(2, i) * filters,\r\n            kernelSize: [3, 3],\r\n            padding: \"same\",\r\n            strides: 2,\r\n            activation: \"relu\",\r\n        }).apply(downs[downs.length - 1]) as tf.SymbolicTensor)\r\n    }\r\n\r\n    const ups = [downs[downs.length - 1]]\r\n    for (let i = 0; i < layers; i++) {\r\n        const last = i === layers - 1\r\n\r\n        const upsampled = tf.layers.conv2dTranspose({\r\n            filters: Math.pow(2, layers - i - 1) * filters,\r\n            kernelSize: [3, 3],\r\n            padding: \"same\",\r\n            strides: 2,\r\n            activation: \"relu\",\r\n        }).apply(ups[ups.length - 1]) as tf.SymbolicTensor\r\n\r\n        const concatenated = tf.layers.concatenate({axis: -1}).apply([upsampled, downs[layers - i - 1]])\r\n\r\n        const processed = tf.layers.conv2d({\r\n            filters: last ? outputFilters : Math.pow(2, layers - i - 1),\r\n            kernelSize: [3, 3],\r\n            padding: \"same\",\r\n            strides: 1,\r\n            activation: last ? \"tanh\" : \"relu\",\r\n        }).apply(concatenated) as tf.SymbolicTensor\r\n\r\n        ups.push(processed)\r\n    }\r\n\r\n    return tf.model({inputs: input, outputs: ups[ups.length - 1]})\r\n}","import * as tf from \"@tensorflow/tfjs\"\r\nimport React from \"react\"\r\nimport { createUNet } from \"./models/UNet\"\r\nimport { useDropzone } from 'react-dropzone'\r\n\r\ntf.enableProdMode()\r\n\r\ntype PainterProps = {\r\n    width: number,\r\n    height: number,\r\n    filters: number,\r\n    layers: number,\r\n    iterations: number,\r\n    setGenerating: (generating: boolean) => void,\r\n}\r\n\r\nexport function Painter(props: PainterProps) {\r\n    function onImageSelected(files: File[]) {\r\n        const image = new Image()\r\n\r\n        image.onload = function (evt: any) {\r\n            const canvas = document.createElement(\"canvas\")\r\n            canvas.width = props.width\r\n            canvas.height = props.height\r\n            const context = canvas.getContext(\"2d\")!\r\n            context.drawImage(image, 0, 0, props.width, props.height)\r\n            const imageData = context.getImageData(0, 0, props.width, props.height).data\r\n            run(Array.from(imageData))\r\n        }\r\n\r\n        const file = files[0]\r\n\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = function (evt: any) {\r\n            if (evt.target.readyState === FileReader.DONE) {\r\n                image.src = evt.target.result\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    async function run(flatImage: number[]) {\r\n        const canvas = document.createElement(\"canvas\")\r\n        canvas.width = props.width\r\n        canvas.height = props.height\r\n        const ctx = canvas.getContext(\"2d\")!\r\n        const imageData = ctx.createImageData(props.width, props.height)\r\n\r\n        const imageTensor = tf.sub(tf.div(tf.tensor1d(flatImage).reshape([1, props.width, props.height, 4]).slice([0, 0, 0, 0], [1, props.width, props.height, 3]), 127.5), 1)\r\n\r\n        const noiseShape: [number, number, number] = [props.width, props.height, 1]\r\n        const outputFilters = 3\r\n\r\n        const model = createUNet(noiseShape, outputFilters, props.layers, props.filters)\r\n        model.compile({\r\n            optimizer: \"adam\",\r\n            loss: \"meanSquaredError\",\r\n        })\r\n\r\n        const noise = tf.randomNormal([1].concat(noiseShape))\r\n\r\n        for (let iter = 0; iter < props.iterations; iter++) {\r\n            await model.fit(noise, imageTensor, {\r\n                batchSize: 1,\r\n                epochs: 20,\r\n            })\r\n\r\n            const pred = await (model.predict(noise) as tf.Tensor).array() as number[][][][]\r\n\r\n            for (let x = 0; x < props.width; x++) {\r\n                for (let y = 0; y < props.height; y++) {\r\n                    const i = x + y * props.width\r\n                    imageData.data[i * 4 + 0] = Math.min(255, Math.max(0, 127.5 * (1 + pred[0][y][x][0])))\r\n                    imageData.data[i * 4 + 1] = Math.min(255, Math.max(0, 127.5 * (1 + pred[0][y][x][1])))\r\n                    imageData.data[i * 4 + 2] = Math.min(255, Math.max(0, 127.5 * (1 + pred[0][y][x][2])))\r\n                    imageData.data[i * 4 + 3] = 255\r\n                }\r\n            }\r\n\r\n            ctx.putImageData(imageData, 0, 0)\r\n            const domImage = document.createElement(\"img\")\r\n            domImage.src = canvas.toDataURL(\"image/png\")\r\n            document.body.appendChild(domImage)\r\n        }\r\n    }\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: \"image/*\",\r\n        onDrop: onImageSelected\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ marginTop: \"10px\", marginBottom: \"10px\", textAlign: \"center\" }}>\r\n                <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <p>Drag 'n' drop some files here, or click to select files</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport './App.css'\nimport { Painter } from './Painter'\nimport Slider from 'rc-slider'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'rc-slider/assets/index.css'\n\nconst [defaultWidth, defaultHeight] = [512, 512]\nconst defaultLayers = 5\nconst defaultFilters = 32\n\nconst App: React.FC = () => {\n    const [width, setWidth] = useState(defaultWidth)\n    const [height, setHeight] = useState(defaultHeight)\n    const [generating, setGenerating] = useState(false)\n    const [layers, setLayers] = useState(defaultLayers)\n    const [filters, setFilters] = useState(defaultFilters)\n\n    return (\n        <div>\n            <div style={{ marginLeft: \"20%\", marginRight: \"20%\" }}>\n                <h1 style={{ textAlign: \"center\" }}>Deep Image Prior (<a href=\"https://arxiv.org/abs/1711.10925\">Paper</a>)</h1>\n                <a href=\"https://github.com/RobinKa/web-deep-image-prior\"><h3 style={{ textAlign: \"center\" }}>Source Code</h3></a>\n\n                <label style={{ fontSize: \"24px\", visibility: !generating ? \"collapse\" : \"visible\" }}>Generating...</label>\n                <div style={{ textAlign: \"center\" }}>\n                    <Slider defaultValue={defaultWidth} min={0} max={4096} step={16} onChange={value => setWidth(value)} />\n                    <label>Width: {width}</label>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <Slider defaultValue={defaultHeight} min={0} max={4096} step={16} onChange={value => setHeight(value)} />\n                    <label>Height: {height}</label>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <Slider defaultValue={defaultLayers} min={1} max={50} step={1} onChange={value => setLayers(value)} />\n                    <label>Layers: {layers}</label>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <Slider defaultValue={defaultFilters} min={1} max={256} step={1} onChange={value => setFilters(value)} />\n                    <label>Filters: {filters}</label>\n                </div>\n            </div>\n\n            <div style={{ visibility: generating ? \"hidden\" : \"visible\", textAlign: \"center\" }}>\n                <Painter width={width} height={height} iterations={100000} setGenerating={setGenerating} layers={layers} filters={filters} />\n            </div>\n        </div>\n    );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}